variables:
  LC_ALL: C.UTF-8
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_STRATEGY: clone # sometimes unclean submodule dirs otherwise
  DNSJIT_IMAGE_NAME: knot/shotgun/ci/dnsjit

stages:
  - docker
  - test
  - deploy

.rebuild-image-rule: &rebuild-image-rule
  if: $CI_PIPELINE_SOURCE == "push"
  changes:
  - ci/dnsjit/**/*
  - .gitlab-ci.yml

dnsjit-image:
  stage: docker
  services:
    - docker:23-dind
  image: docker:23-dind
  tags:
    - amd64
    - dind
  rules:
    - <<: *rebuild-image-rule
  script:
      # We concatenate '$CI_COMMIT_TAG$CI_COMMIT_TAG' here - they are exclusive,
      # only one of them should apply
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_JOB_TOKEN" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY/$DNSJIT_IMAGE_NAME:latest" || true # to use as many cached layers as possible (allowed to fail)
    - docker pull "$CI_REGISTRY/$DNSJIT_IMAGE_NAME:$CI_COMMIT_BRANCH$CI_COMMIT_TAG" || true # to use as many cached layers as possible (allowed to fail)
    - docker build --build-arg "CI_REGISTRY=$CI_REGISTRY" --tag "$CI_REGISTRY/$DNSJIT_IMAGE_NAME:$CI_COMMIT_SHORT_SHA" ci/dnsjit
    - test "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH"
      && docker tag "$CI_REGISTRY/$DNSJIT_IMAGE_NAME:$CI_COMMIT_SHORT_SHA" "$CI_REGISTRY/$DNSJIT_IMAGE_NAME:latest"
      && echo "Created 'latest' tag"
      || echo "Not on '$CI_DEFAULT_BRANCH' branch - skipping"
    - test -n "$CI_COMMIT_BRANCH$CI_COMMIT_TAG"
      && docker tag "$CI_REGISTRY/$DNSJIT_IMAGE_NAME:$CI_COMMIT_SHORT_SHA" "$CI_REGISTRY/$DNSJIT_IMAGE_NAME:$CI_COMMIT_BRANCH$CI_COMMIT_TAG"
      && docker push "$CI_REGISTRY/$DNSJIT_IMAGE_NAME:$CI_COMMIT_BRANCH$CI_COMMIT_TAG"
      && echo "Pushed '$CI_COMMIT_BRANCH$CI_COMMIT_TAG' tag"
      || echo "Not on a branch/tag"
    - test "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH"
      && docker tag "$CI_REGISTRY/$DNSJIT_IMAGE_NAME:$CI_COMMIT_SHORT_SHA" "$CI_REGISTRY/$DNSJIT_IMAGE_NAME:latest"
      && docker push "$CI_REGISTRY/$DNSJIT_IMAGE_NAME:latest"
      && echo "Pushed 'latest' tag"
      || echo "Not on '$CI_DEFAULT_BRANCH' branch - skipping"

.debian: &debian
  # Concatenating
  image: $CI_REGISTRY/$DNSJIT_IMAGE_NAME:$CI_COMMIT_BRANCH$CI_COMMIT_TAG
  # This is unsupported in GitLab <16.1
  #needs: []
  #rules:
  #  - <<: *rebuild-image-rule
  #    needs:
  #      - job: dnsjit-image
  #        artifacts: false
  #  - when: on_success
  tags:
    - docker
    - linux
    - amd64

black:
  <<: *debian
  stage: test
  script:
    - python3 -m black --check . --extend-exclude 'replay/dnssim/vendor'

mypy:
  <<: *debian
  stage: test
  script:
    - ./ci/mypy-run.sh

pylint:
  <<: *debian
  stage: test
  script:
    - pip3 install -r requirements.txt
    - ./ci/pylint-run.sh

luacheck:
  <<: *debian
  stage: test
  script:
    - ./ci/luacheck-run.sh

.dnssim-build: &dnssim-build
  <<: *debian
  stage: test
  script:
    - mkdir replay/dnssim/build
    - cd    replay/dnssim/build
    - echo "ASAN=$DNSSIM_ASAN  UBSAN=$DNSSIM_UBSAN"
    - cmake .. -DASAN=${DNSSIM_ASAN} -DUBSAN=${DNSSIM_UBSAN}
    - make

dnssim-build:
  <<: *dnssim-build
  variables:
    DNSSIM_ASAN: 0
    DNSSIM_UBSAN: 0

dnssim-build-sanitizers:
  <<: *dnssim-build
  variables:
    DNSSIM_ASAN: 1
    DNSSIM_UBSAN: 1

docker:
  stage: deploy
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build --no-cache -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
  tags:
    - dind
  only:
     - tags
